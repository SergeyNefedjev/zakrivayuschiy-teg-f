/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.

*/

.page {
  margin-block: 100px;
  margin-inline: auto;
  min-inline-size: 320px;
  max-inline-size: clamp(375px, 100%, 700px);
  min-block-size: 100dvb;
  font-variation-settings: 'wght' var(--font-weight-card);
  background-color: var(--color-bg);
  background-size: cover;
  background-attachment: fixed;
  color: var(--color-accent);
  background-image: var(--bg-image);
  background-repeat: no-repeat;
}

.header {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-block-end: 100px;
  border: var(--border);
  font-family: var(--font-accent), sans-serif;
  font-size: 0.778em;
  text-transform: uppercase;
  background-color: var(--color-bg);
}

.header__title {
  margin-block: 136px 20px;
  font-size: clamp(3.0625rem, 2.7104rem + 1.5023vw, 4.0625rem);
}

@media (width <= 375px) {
  .header__title {
    margin-block: 121px 20px;
  }
}
.header__title-additional {
  font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
}

.theme-menu__list {
  display: flex;
  flex-direction: column;
  gap: 14px;
  margin-block: 25px;
  padding-left: 16px;
}

.theme-menu__button {
  padding: 0;
  background-color: transparent;
  border: none;
  position: relative;
  text-transform: uppercase;
  transition: opacity 0.3s ease;
  font-size: 14px;
}

.theme-menu__button:hover {
  opacity: 0.6;
}

.theme-menu__button:disabled {
  opacity: 0.6;
  pointer-events: none;
}

.theme-menu__button:disabled::before {
  content: '▶';
  position: absolute;
  left: -20px;
  animation: arrow 0.5s ease-in-out infinite alternate-reverse;
}

.theme-menu__button:focus {
  outline: none;
}

.theme-menu__button:focus-visible {
  opacity: 0.6;
}

.theme-menu__button::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 0;
  background-color: var(--color-accent);
  transition: inline-size 0.3s ease;
  block-size: 2px;
  inline-size: 0;
}

.theme-menu__button:focus-visible:after {
  inline-size: 100%;
}

.card {
  border: var(--border);
  background-color: var(--color-bg);
  font-family: var(--font-main);
  font-size: 18px;
  margin-bottom: 50px;
}

.card-title {
  font-variation-settings: 'wgth' var(--font-weight-title);
  font-size: 18px;
  padding: 4px 10px 5px;
}

.card-image-container {
  position: relative;
}

.card-image-label {
  content: "";
  display: block;
  position: absolute;
  z-index: 1;
  top: 25px;
  right: 25px;
  font-size: 14px;
  mix-blend-mode: hard-light;
  opacity: 0.5;
  font-family: var(--font-accent);
  text-shadow:  -1px 0 var(--text-shadow), 
                0 1px var(--text-shadow), 
                1px 0 var(--text-shadow), 
                0 -1px var(--text-shadow);
}

@supports((text-stroke: 1px var(--text-shadow)) or (-webkit-text-stroke: 1px var(--text-shadow))) {
  card-image-label {
      -webkit-text-stroke: 1px var(--text-shadow);
      text-shadow: none;
  }
} 

.card-image {
  width: 100%;
  height: 100%;
  max-height: 700px;
  object-fit: cover;
  object-position: center;
  border-top: var(--border);
  border-bottom: var(--border);
  margin-bottom: 20px;
}

@media (width <= 375px) {
  .card-image {
    width: 100%;
    height: 100%;
    max-height: 375px;
    margin-bottom: 20px;
  }
}

.card-paragraph {
  font-variation-settings: "wght" var(--font-weight-card);
  margin: 0 25px 27px;
  line-height: 117%;
}

.conteiner__card-button {
  display: flex;
  justify-content: end;
  gap: 5px;
  margin-right: 25px;
  margin-bottom: 25px;
}

.card__icon-button {
  width: 43px;
  height: 38px;
  background-color: transparent;
  border: none;
  padding: 0;
  border: 2px solid transparent;
  transition: border 0.3s ease;
}

.card__icon-button:focus {
  outline: none;
}

.card__icon-button:focus-visible {
  border: var(--border);
}

.sparks {
  opacity: 0;
}

.like-icon .core {
  fill: transparent;
  transition: fill 0.3s 0.03s linear;
}

.like-icon:hover .core {
  fill: var(--color-contour);
  transition: fill 0.3s linear;
}

.like-icon .main-body {
  fill: transparent;
  transition: fill 0.3s linear;
}

.like-icon:hover .main-body {
  fill: var(--color-contour);
  transition: fill 0.3s 0.05s linear;
}

.like-icon:active .core {
  fill: var(--color-filling);
  transition: fill 0.3s linear;
}

.like-icon:active .main-body {
  fill: var(--color-filling);
  transition: fill 0.3s 0.05s linear;
}

.like-icon.is-liked .core {
  fill: var(--color-filling);
  transition: fill 0.3s linear;
}

.like-icon.is-liked .main-body {
  fill: var(--color-filling);
  transition: fill 0.3s 0.05s linear;
}

.like-icon.is-liked .contour {
  fill: var(--color-filling);
  transition: fill 0.3s 0.06s linear;
}

.like-icon.is-liked .heart {
  transform-origin: center;
  animation: scaleheart 0.3s 0.1s ease-in 1 alternate;
}

.like-icon.is-liked .sparks {
  animation: opacitysparks 0.3s 0.3s ease-in 1 alternate;
}

.like-icon .contour {
  fill: var(--color-contour);
  transition: fill 0.1s linear;
}

.button {
  display: block;
  position: relative;
  border: var(--border);
  font-family: var(--font-accent);
  font-size: 14px;
  line-height: 90%;
  background-color: var(--color-bg);
  transition: box-shadow 0.3s ease;
  color: var(--color-button);
}

.card__like-button {
  width: 130px;
  height: 38px;
}

.button::after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  display: block;
  transition: inline-size 0.5s ease-in-out;
  background-color: var(--color-accent);
  block-size: 100%;
  inline-size: 0;
  z-index: 1;
}

.button:hover::after {
  inline-size: 100%;
}

.button:focus {
  outline: none;
}

.button:focus-visible {
  box-shadow: 2px 2px 0px 0px var(--color-accent);
}

.button:hover {
  cursor: pointer;
}

.button__text {
  position: relative;
  z-index: 10;
  mix-blend-mode: difference;
  color: var(--color-button);
}

.card__save-button {
  line-height: 90%;
  margin: auto;
  width: 335px;
  height: 51px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  margin-bottom: 100px;
}

@media (width <= 375px) {
  .card__save-button {
    flex-direction: column;
    width: 306px;
    height: 80px;
  }
}

.floppy {
  position: relative;
  z-index: 10;
  mix-blend-mode: difference;
  width: 21px;
  height: 21px;
}

@media (width <= 375px) {
  .floppy {
    width: 28px;
    height: 28px;
  }
}

.card__modal-window {
  color: var(--color-accent);
  border: var(--border);
  margin: auto;
  background-color: var(--color-bg);
}

.card__modal-window::backdrop {
  background-color: rgb(0 0 0 / 0.75);
}

.card__modal-window[open] {
  display: grid;
  grid-template-columns: min-content 1fr;
  column-gap: 20px;
  row-gap: 30px;
  font-family: var(--font-accent);
  width: 357px;
  padding: 29px;
}

@media (width <= 375px) {
  .card__modal-window[open] {
    width: 341px;
  }
}

.modal-floppy {
  width: 39px;
  height: 39px;
  justify-self: center;
  align-self: center;
}

.modal-text {
  font-size: 14px;
  line-height: 150%;
  justify-self: start;
  align-self: center;
  text-transform: uppercase;
}

.button__modal {
  text-transform: uppercase;
  grid-column-start: 1;
  grid-column-end: 3;
  width: 293px;
  height: 38px;
  justify-self: center;
  align-self: center;
}

@media (width <= 500px) {
  .button__modal {
    width: 100%;
    max-width: 257px;
  }
}

.card-image-filter-brightness {
  filter: brightness(200%);
}

.card-image-filter-contrast {
  filter: contrast(20%);
}

.card-image-filter-blur {
  filter: blur(0.2rem);
}

.card-image-filter-opacity {
  filter: opacity(0.8);
}

.card-image-filter-grayscale {
  filter: grayscale(0.9);
}

.card-image-filter-saturate {
  filter: saturate(40%);
}

.card-image-filter-hue-rotate {
  filter: hue-rotate(-90deg);
} 

.card-image-ilter-sepia {
  filter: sepia(90%) invert(0.8);
}



